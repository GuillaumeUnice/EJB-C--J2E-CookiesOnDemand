
package stub;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UsersWs", targetNamespace = "http://webservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UsersWs {


    /**
     * 
     * @param userId
     * @param newCreditCardNumber
     * @param password
     */
    @WebMethod
    @RequestWrapper(localName = "changCreditCard", targetNamespace = "http://webservice/", className = "stub.ChangCreditCard")
    @ResponseWrapper(localName = "changCreditCardResponse", targetNamespace = "http://webservice/", className = "stub.ChangCreditCardResponse")
    public void changCreditCard(
        @WebParam(name = "newCreditCardNumber", targetNamespace = "")
        Long newCreditCardNumber,
        @WebParam(name = "userId", targetNamespace = "")
        String userId,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param id
     * @param location
     * @param taxe
     * @param maxClientsNumber
     * @param password
     * @param maxCookiesNumber
     */
    @WebMethod
    @RequestWrapper(localName = "createShop", targetNamespace = "http://webservice/", className = "stub.CreateShop")
    @ResponseWrapper(localName = "createShopResponse", targetNamespace = "http://webservice/", className = "stub.CreateShopResponse")
    public void createShop(
        @WebParam(name = "Location", targetNamespace = "")
        Address location,
        @WebParam(name = "MaxClientsNumber", targetNamespace = "")
        int maxClientsNumber,
        @WebParam(name = "MaxCookiesNumber", targetNamespace = "")
        int maxCookiesNumber,
        @WebParam(name = "Taxe", targetNamespace = "")
        double taxe,
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param shopRecipe
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(name = "ShopRecipeCreated", targetNamespace = "")
    @RequestWrapper(localName = "createShopRecipe", targetNamespace = "http://webservice/", className = "stub.CreateShopRecipe")
    @ResponseWrapper(localName = "createShopRecipeResponse", targetNamespace = "http://webservice/", className = "stub.CreateShopRecipeResponse")
    public Long createShopRecipe(
        @WebParam(name = "ShopRecipe", targetNamespace = "")
        ShopRecipe shopRecipe);

    /**
     * 
     * @return
     *     returns java.util.List<stub.Cooking>
     */
    @WebMethod
    @WebResult(name = "Cookings", targetNamespace = "")
    @RequestWrapper(localName = "getAllCookings", targetNamespace = "http://webservice/", className = "stub.GetAllCookings")
    @ResponseWrapper(localName = "getAllCookingsResponse", targetNamespace = "http://webservice/", className = "stub.GetAllCookingsResponse")
    public List<Cooking> getAllCookings();

    /**
     * 
     * @param user
     */
    @WebMethod
    @RequestWrapper(localName = "removeUser", targetNamespace = "http://webservice/", className = "stub.RemoveUser")
    @ResponseWrapper(localName = "removeUserResponse", targetNamespace = "http://webservice/", className = "stub.RemoveUserResponse")
    public void removeUser(
        @WebParam(name = "user", targetNamespace = "")
        User user);

    /**
     * 
     * @param personalRecipe
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(name = "PersonalRecipeCreated", targetNamespace = "")
    @RequestWrapper(localName = "createPersonalRecipe", targetNamespace = "http://webservice/", className = "stub.CreatePersonalRecipe")
    @ResponseWrapper(localName = "createPersonalRecipeResponse", targetNamespace = "http://webservice/", className = "stub.CreatePersonalRecipeResponse")
    public Long createPersonalRecipe(
        @WebParam(name = "PersonalRecipe", targetNamespace = "")
        PersonalRecipe personalRecipe);

    /**
     * 
     * @param creditCard
     * @param order
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(name = "OrderCreated", targetNamespace = "")
    @RequestWrapper(localName = "createOrder", targetNamespace = "http://webservice/", className = "stub.CreateOrder")
    @ResponseWrapper(localName = "createOrderResponse", targetNamespace = "http://webservice/", className = "stub.CreateOrderResponse")
    public Long createOrder(
        @WebParam(name = "order", targetNamespace = "")
        UserOrder order,
        @WebParam(name = "creditCard", targetNamespace = "")
        Long creditCard);

    /**
     * 
     * @return
     *     returns java.util.List<stub.Dough>
     */
    @WebMethod
    @WebResult(name = "Doughs", targetNamespace = "")
    @RequestWrapper(localName = "getAllDoughs", targetNamespace = "http://webservice/", className = "stub.GetAllDoughs")
    @ResponseWrapper(localName = "getAllDoughsResponse", targetNamespace = "http://webservice/", className = "stub.GetAllDoughsResponse")
    public List<Dough> getAllDoughs();

    /**
     * 
     * @param user
     * @return
     *     returns java.util.List<stub.PersonalRecipe>
     */
    @WebMethod
    @WebResult(name = "OneUserRecipes", targetNamespace = "")
    @RequestWrapper(localName = "getAllRecipesByUser", targetNamespace = "http://webservice/", className = "stub.GetAllRecipesByUser")
    @ResponseWrapper(localName = "getAllRecipesByUserResponse", targetNamespace = "http://webservice/", className = "stub.GetAllRecipesByUserResponse")
    public List<PersonalRecipe> getAllRecipesByUser(
        @WebParam(name = "user", targetNamespace = "")
        CustomerUser user);

    /**
     * 
     * @return
     *     returns java.util.List<stub.Shop>
     */
    @WebMethod
    @WebResult(name = "Shops", targetNamespace = "")
    @RequestWrapper(localName = "getAllShops", targetNamespace = "http://webservice/", className = "stub.GetAllShops")
    @ResponseWrapper(localName = "getAllShopsResponse", targetNamespace = "http://webservice/", className = "stub.GetAllShopsResponse")
    public List<Shop> getAllShops();

    /**
     * 
     * @param id
     * @return
     *     returns stub.ShopUser
     */
    @WebMethod
    @WebResult(name = "ShopUser", targetNamespace = "")
    @RequestWrapper(localName = "getShopUserById", targetNamespace = "http://webservice/", className = "stub.GetShopUserById")
    @ResponseWrapper(localName = "getShopUserByIdResponse", targetNamespace = "http://webservice/", className = "stub.GetShopUserByIdResponse")
    public ShopUser getShopUserById(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param userId
     * @param newFavouriteShopId
     * @param password
     */
    @WebMethod
    @RequestWrapper(localName = "changeFavoriteShop", targetNamespace = "http://webservice/", className = "stub.ChangeFavoriteShop")
    @ResponseWrapper(localName = "changeFavoriteShopResponse", targetNamespace = "http://webservice/", className = "stub.ChangeFavoriteShopResponse")
    public void changeFavoriteShop(
        @WebParam(name = "newFavouriteShopId", targetNamespace = "")
        Long newFavouriteShopId,
        @WebParam(name = "userId", targetNamespace = "")
        String userId,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<stub.User>
     */
    @WebMethod
    @WebResult(name = "Users", targetNamespace = "")
    @RequestWrapper(localName = "getAllUsers", targetNamespace = "http://webservice/", className = "stub.GetAllUsers")
    @ResponseWrapper(localName = "getAllUsersResponse", targetNamespace = "http://webservice/", className = "stub.GetAllUsersResponse")
    public List<User> getAllUsers();

    /**
     * 
     * @return
     *     returns java.util.List<stub.CustomerUser>
     */
    @WebMethod
    @WebResult(name = "CustomerUsers", targetNamespace = "")
    @RequestWrapper(localName = "getAllCustomerUsers", targetNamespace = "http://webservice/", className = "stub.GetAllCustomerUsers")
    @ResponseWrapper(localName = "getAllCustomerUsersResponse", targetNamespace = "http://webservice/", className = "stub.GetAllCustomerUsersResponse")
    public List<CustomerUser> getAllCustomerUsers();

    /**
     * 
     * @param recipe
     */
    @WebMethod
    @RequestWrapper(localName = "removeRecipe", targetNamespace = "http://webservice/", className = "stub.RemoveRecipe")
    @ResponseWrapper(localName = "removeRecipeResponse", targetNamespace = "http://webservice/", className = "stub.RemoveRecipeResponse")
    public void removeRecipe(
        @WebParam(name = "Recipe", targetNamespace = "")
        Recipe recipe);

    /**
     * 
     * @param lastName
     * @param email
     * @param password
     * @param firstNane
     */
    @WebMethod
    @RequestWrapper(localName = "createShopUser", targetNamespace = "http://webservice/", className = "stub.CreateShopUser")
    @ResponseWrapper(localName = "createShopUserResponse", targetNamespace = "http://webservice/", className = "stub.CreateShopUserResponse")
    public void createShopUser(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "firstNane", targetNamespace = "")
        String firstNane,
        @WebParam(name = "lastName", targetNamespace = "")
        String lastName,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<stub.Topping>
     */
    @WebMethod
    @WebResult(name = "Toppings", targetNamespace = "")
    @RequestWrapper(localName = "getAllToppings", targetNamespace = "http://webservice/", className = "stub.GetAllToppings")
    @ResponseWrapper(localName = "getAllToppingsResponse", targetNamespace = "http://webservice/", className = "stub.GetAllToppingsResponse")
    public List<Topping> getAllToppings();

    /**
     * 
     * @param personalRecipe
     */
    @WebMethod
    @RequestWrapper(localName = "updatePersonalRecipe", targetNamespace = "http://webservice/", className = "stub.UpdatePersonalRecipe")
    @ResponseWrapper(localName = "updatePersonalRecipeResponse", targetNamespace = "http://webservice/", className = "stub.UpdatePersonalRecipeResponse")
    public void updatePersonalRecipe(
        @WebParam(name = "PersonalRecipe", targetNamespace = "")
        PersonalRecipe personalRecipe);

    /**
     * 
     * @param ident
     * @return
     *     returns stub.Shop
     */
    @WebMethod
    @WebResult(name = "Shop", targetNamespace = "")
    @RequestWrapper(localName = "getShopById", targetNamespace = "http://webservice/", className = "stub.GetShopById")
    @ResponseWrapper(localName = "getShopByIdResponse", targetNamespace = "http://webservice/", className = "stub.GetShopByIdResponse")
    public Shop getShopById(
        @WebParam(name = "ident", targetNamespace = "")
        int ident);

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "deleteShop", targetNamespace = "http://webservice/", className = "stub.DeleteShop")
    @ResponseWrapper(localName = "deleteShopResponse", targetNamespace = "http://webservice/", className = "stub.DeleteShopResponse")
    public void deleteShop(
        @WebParam(name = "id", targetNamespace = "")
        Long id);

    /**
     * 
     * @return
     *     returns java.util.List<stub.UserOrder>
     */
    @WebMethod
    @WebResult(name = "AllOrders", targetNamespace = "")
    @RequestWrapper(localName = "getAllOrders", targetNamespace = "http://webservice/", className = "stub.GetAllOrders")
    @ResponseWrapper(localName = "getAllOrdersResponse", targetNamespace = "http://webservice/", className = "stub.GetAllOrdersResponse")
    public List<UserOrder> getAllOrders();

    /**
     * 
     * @return
     *     returns java.util.List<stub.Recipe>
     */
    @WebMethod
    @WebResult(name = "AllRecipes", targetNamespace = "")
    @RequestWrapper(localName = "getAllRecipes", targetNamespace = "http://webservice/", className = "stub.GetAllRecipes")
    @ResponseWrapper(localName = "getAllRecipesResponse", targetNamespace = "http://webservice/", className = "stub.GetAllRecipesResponse")
    public List<Recipe> getAllRecipes();

    /**
     * 
     * @return
     *     returns java.util.List<stub.Mix>
     */
    @WebMethod
    @WebResult(name = "Mixs", targetNamespace = "")
    @RequestWrapper(localName = "getAllMixs", targetNamespace = "http://webservice/", className = "stub.GetAllMixs")
    @ResponseWrapper(localName = "getAllMixsResponse", targetNamespace = "http://webservice/", className = "stub.GetAllMixsResponse")
    public List<Mix> getAllMixs();

    /**
     * 
     * @return
     *     returns java.util.List<stub.Flavour>
     */
    @WebMethod
    @WebResult(name = "Flavours", targetNamespace = "")
    @RequestWrapper(localName = "getAllFlavours", targetNamespace = "http://webservice/", className = "stub.GetAllFlavours")
    @ResponseWrapper(localName = "getAllFlavoursResponse", targetNamespace = "http://webservice/", className = "stub.GetAllFlavoursResponse")
    public List<Flavour> getAllFlavours();

    /**
     * 
     * @param lastName
     * @param email
     * @param password
     * @param firstNane
     */
    @WebMethod
    @RequestWrapper(localName = "createCustomerUser", targetNamespace = "http://webservice/", className = "stub.CreateCustomerUser")
    @ResponseWrapper(localName = "createCustomerUserResponse", targetNamespace = "http://webservice/", className = "stub.CreateCustomerUserResponse")
    public void createCustomerUser(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "firstNane", targetNamespace = "")
        String firstNane,
        @WebParam(name = "lastName", targetNamespace = "")
        String lastName,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<stub.ShopRecipe>
     */
    @WebMethod
    @WebResult(name = "AllShopRecipes", targetNamespace = "")
    @RequestWrapper(localName = "getAllShopRecipes", targetNamespace = "http://webservice/", className = "stub.GetAllShopRecipes")
    @ResponseWrapper(localName = "getAllShopRecipesResponse", targetNamespace = "http://webservice/", className = "stub.GetAllShopRecipesResponse")
    public List<ShopRecipe> getAllShopRecipes();

    /**
     * 
     * @param user
     * @return
     *     returns java.util.List<stub.UserOrder>
     */
    @WebMethod
    @WebResult(name = "OrderCreated", targetNamespace = "")
    @RequestWrapper(localName = "getUserOrders", targetNamespace = "http://webservice/", className = "stub.GetUserOrders")
    @ResponseWrapper(localName = "getUserOrdersResponse", targetNamespace = "http://webservice/", className = "stub.GetUserOrdersResponse")
    public List<UserOrder> getUserOrders(
        @WebParam(name = "user", targetNamespace = "")
        String user);

    /**
     * 
     * @param id
     * @param password
     * @return
     *     returns stub.CustomerUser
     */
    @WebMethod
    @WebResult(name = "CustomerUser", targetNamespace = "")
    @RequestWrapper(localName = "getCustomerUserById", targetNamespace = "http://webservice/", className = "stub.GetCustomerUserById")
    @ResponseWrapper(localName = "getCustomerUserByIdResponse", targetNamespace = "http://webservice/", className = "stub.GetCustomerUserByIdResponse")
    public CustomerUser getCustomerUserById(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<stub.ShopUser>
     */
    @WebMethod
    @WebResult(name = "ShopUsers", targetNamespace = "")
    @RequestWrapper(localName = "getAllShopUsers", targetNamespace = "http://webservice/", className = "stub.GetAllShopUsers")
    @ResponseWrapper(localName = "getAllShopUsersResponse", targetNamespace = "http://webservice/", className = "stub.GetAllShopUsersResponse")
    public List<ShopUser> getAllShopUsers();

}
